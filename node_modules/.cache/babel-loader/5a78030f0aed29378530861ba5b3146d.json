{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\react\\\\jianshu\\\\src\\\\pages\\\\home\\\\components\\\\Writer.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { actionCreators } from '../store';\nimport { CSSTransition } from 'react-transition-group';\nimport { WriterWrapper, WriterTitle, WriterSwitch, WriterList, WriterItem, Follow } from '../style';\n\nclass Writer extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.getListArea = () => {\n      const _this$props = this.props,\n            writerList = _this$props.writerList,\n            writerPage = _this$props.writerPage;\n      const newList = writerList.toJS();\n      const pageList = []; // console.log(newList.length)\n\n      if (newList.length) {\n        // console.log(writerPage)\n        for (let i = (writerPage - 1) * 5; i < writerPage * 5; i++) {\n          if (newList[i] === undefined) {\n            break;\n          } else {\n            // console.log(newList[i])\n            pageList.push(React.createElement(WriterItem, {\n              key: newList[i][\"id\"],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              alt: \"\",\n              src: newList[i][\"imgUrl\"],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95\n              },\n              __self: this\n            }), React.createElement(Follow, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }, \"+\"), \"\\u5173\\u6CE8\"), React.createElement(\"div\", {\n              className: \"writer\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }, newList[i][\"writer\"]), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101\n              },\n              __self: this\n            }, newList[i][\"desc\"])));\n          }\n        }\n      } else {\n        return pageList;\n      }\n\n      return pageList;\n    };\n  }\n\n  render() {\n    // console.log(this.props)\n    const _this$props2 = this.props,\n          handleChangePage = _this$props2.handleChangePage,\n          writerPage = _this$props2.writerPage,\n          writerTotalPage = _this$props2.writerTotalPage;\n    return React.createElement(WriterWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(WriterTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"\\u63A8\\u8350\\u4F5C\\u8005\", React.createElement(CSSTransition, {\n      in: this.spinIcon,\n      timeout: 300,\n      classNames: \"writer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(WriterSwitch, {\n      onClick: () => handleChangePage(writerPage, writerTotalPage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      ref: e => {\n        this.spinIcon = e;\n      },\n      className: \"iconfont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"\\uE601\"), \"\\u6362\\u4E00\\u6279\"))), React.createElement(WriterList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.getListArea()));\n  }\n\n  componentWillMount() {\n    this.props.getWriterList();\n  }\n\n}\n\nconst mapState = state => ({\n  writerList: state.getIn(['home', 'writerList']),\n  writerPage: state.getIn(['home', 'writerPage']),\n  writerTotalPage: state.getIn(['home', 'writerTotalPage'])\n});\n\nconst mapDispatch = dispatch => ({\n  getWriterList() {\n    // console.log(list)\n    dispatch(actionCreators.getWriterJson());\n  },\n\n  handleChangePage(page, totalPage) {\n    if (page < totalPage) {\n      let newpage = page + 1; // console.log(newpage)\n\n      dispatch(actionCreators.changWriterPage(newpage));\n    } else {\n      dispatch(actionCreators.changWriterPage(1));\n    }\n\n    console.log(page, totalPage);\n  }\n\n});\n\nexport default connect(mapState, mapDispatch)(Writer);","map":{"version":3,"sources":["D:\\Code\\react\\jianshu\\src\\pages\\home\\components\\Writer.js"],"names":["React","PureComponent","connect","actionCreators","CSSTransition","WriterWrapper","WriterTitle","WriterSwitch","WriterList","WriterItem","Follow","Writer","getListArea","props","writerList","writerPage","newList","toJS","pageList","length","i","undefined","push","render","handleChangePage","writerTotalPage","spinIcon","e","componentWillMount","getWriterList","mapState","state","getIn","mapDispatch","dispatch","getWriterJson","page","totalPage","newpage","changWriterPage","console","log"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport  {actionCreators} from '../store';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport {\r\n    WriterWrapper,\r\n    WriterTitle,\r\n    WriterSwitch,\r\n    WriterList,\r\n    WriterItem,\r\n    Follow\r\n} from '../style';\r\n\r\nclass Writer extends PureComponent {\r\n    render(){\r\n        // console.log(this.props)\r\n        const {\r\n            handleChangePage,\r\n            writerPage,\r\n            writerTotalPage\r\n        } = this.props;\r\n        return(\r\n            <WriterWrapper>\r\n            <WriterTitle>\r\n                推荐作者  \r\n                <CSSTransition\r\n                in ={this.spinIcon}\r\n                timeout={300}\r\n                classNames ='writer'\r\n                >\r\n                <WriterSwitch\r\n                onClick ={() =>handleChangePage(writerPage,writerTotalPage)}\r\n                >\r\n                <span \r\n                ref ={(e) =>{this.spinIcon =e}}\r\n                className=\"iconfont\">&#xe601;</span>\r\n                    换一批\r\n                </WriterSwitch>\r\n                </CSSTransition>\r\n            </WriterTitle>\r\n            <WriterList>\r\n                {\r\n                   this.getListArea()\r\n\r\n                }\r\n                {/* {this.props.writerList.map((item,index) =>{\r\n                    return(\r\n                <WriterItem key={index}>\r\n                <img\r\n                alt=''\r\n                src={item.get('imgUrl')}\r\n                ></img>\r\n                <Follow><span>+</span>关注</Follow>\r\n                <div className='writer'>{item.get('writer')}</div>\r\n                <p>{item.get('desc')}</p>\r\n                </WriterItem> \r\n                    )\r\n                })} */}\r\n\r\n               {/* <WriterItem>\r\n                <img\r\n                alt=''\r\n                src='//upload.jianshu.io/users/upload_avatars/10849033/7278547c-f8ba-4a5a-a2ad-5dfd43abab81.jpg?imageMogr2/auto-orient/strip|imageView2/1/w/96/h/96/format/webp'\r\n                ></img>\r\n                <Follow><span>+</span>关注</Follow>\r\n                <div className='writer'>lostdays</div>\r\n                <p>写了231.7k字 · 2.1k喜欢</p>\r\n                </WriterItem>  */}\r\n            </WriterList>  \r\n            </WriterWrapper>\r\n        )\r\n    }\r\n\r\n    getListArea =() =>{\r\n        const {\r\n            writerList,\r\n            writerPage\r\n        } =this.props;\r\n        const newList = writerList.toJS();\r\n        const pageList =[];\r\n        // console.log(newList.length)\r\n        \r\n        if(newList.length){\r\n            // console.log(writerPage)\r\n            \r\n            for (let i = (writerPage-1) * 5; i < writerPage*5; i++) {\r\n                \r\n                if(newList[i] ===undefined){\r\n                    break\r\n                }else{\r\n                    // console.log(newList[i])\r\n                    pageList.push(\r\n\r\n                        <WriterItem key={newList[i][\"id\"]}>\r\n                        <img\r\n                        alt=''\r\n                        src={newList[i][\"imgUrl\"]}\r\n                        ></img>\r\n                        <Follow><span>+</span>关注</Follow>\r\n                        <div className='writer'>{newList[i][\"writer\"]}</div>\r\n                        <p>{newList[i][\"desc\"]}</p>\r\n                        </WriterItem> \r\n                    )\r\n                }\r\n                \r\n            \r\n            }\r\n        }else{\r\n            return pageList\r\n        }\r\n        return pageList\r\n    }\r\n\r\n    componentWillMount(){\r\n        \r\n        this.props.getWriterList()\r\n        \r\n    }\r\n\r\n}\r\n    const mapState = (state) =>(\r\n        {\r\n        writerList:state.getIn(['home','writerList']),\r\n        writerPage:state.getIn(['home','writerPage']),\r\n        writerTotalPage:state.getIn(['home','writerTotalPage'])\r\n    });\r\n    \r\n    const mapDispatch = (dispatch) =>({\r\n        getWriterList(){\r\n            // console.log(list)\r\n            dispatch(actionCreators.getWriterJson())\r\n            \r\n        },\r\n        handleChangePage(page,totalPage){\r\n            if(page < totalPage){\r\n                let newpage = page +1;\r\n                // console.log(newpage)\r\n                dispatch(actionCreators.changWriterPage(newpage))\r\n            }else{\r\n                dispatch(actionCreators.changWriterPage(1))\r\n            }\r\n            console.log(page,totalPage)\r\n        }\r\n    })\r\n\r\nexport default connect(mapState,mapDispatch)(Writer);"]},"metadata":{},"sourceType":"module"}